input {
  jdbc {
    jdbc_driver_library => "${JDBC_DRIVER}"
    jdbc_driver_class => "com.jdbc.openaccess.OpenAccessDriver"
    jdbc_connection_string => "jdbc:ns://${ORACLE_HOST}:${ORACLE_PORT};ServerDataSource=${SERVICE_DATA_SOURCE};"
    jdbc_user => "${USER}"
    jdbc_password => "${PASSWORD}" # Key Store
    schedule => "5 0 * * *"
    statement => "SELECT cus.customer_id, cus.name AS customer_code, REPLACE(cus.full_name, cus.name, '') name, cus.phone, cus.mobile_phone, cus.create_date, cus.date_of_birth, cus.email, gen.list_item_name AS gender, TRUNC(DATE_FIRST_SALE, 'DD') first_sale_date, TRUNC(DATE_LAST_SALE, 'DD') last_sale_date FROM CUSTOMERS cus LEFT JOIN GENDER gen ON cus.gender_id = gen.list_id"
    type => "customer"
    add_field => {"document_id" => "%{customer_id}"}
  }
  jdbc {
    jdbc_driver_library => "${NETSUITE_JDBC_DRIVER}"
    jdbc_driver_class => "com.netsuite.jdbc.openaccess.OpenAccessDriver"
    jdbc_connection_string => "jdbc:ns://${NETSUITE_SERVICE_HOST}:${NETSUITE_SERVICE_PORT};ServerDataSource=${NETSUITE_SERVICE_DATA_SOURCE};encrypted=1;Ciphersuites=TLS_RSA_WITH_AES_128_CBC_SHA;CustomProperties=(AccountID=${NETSUITE_ACCOUNT_ID};RoleID=${NETSUITE_ROLE_ID})"
    jdbc_user => "${NETSUITE_USER}"
    jdbc_password => "${NETSUITE_PWD}" # Key Store
    schedule => "10 0 * * *"
    statement => "SELECT trans.transaction_id AS invoice_id, trans.tranid AS invoice_code, trans.entity_id AS customer_id, transl.net_amount, trans.billaddress AS bill_address, trans.shipaddress AS ship_address, trans.status, trans.trandate, trans.create_date, transl.net_amount, loc.name AS location, sale.name AS sales_rep FROM TRANSACTIONS trans LEFT JOIN TRANSACTION_LINES transl ON transl.transaction_id = trans.transaction_id AND transl.account_id = 256 LEFT JOIN LOCATIONS loc ON loc.location_id = trans.location_id LEFT JOIN SALES_REPS sale ON sale.sales_rep_id = trans.sales_rep_id WHERE trans.transaction_type = 'Invoice'"
    type => "invoice"
    add_field => {"document_id" => "%{invoice_id}"}
  }
}
filter {
  mutate {
    convert => { "create_date" => "string" }
    strip => ["sales_rep", "name"]
  }
  date {
    locale => "en"
    timezone => "UTC"
    match => ["create_date","yyyy-MM-dd'T'HH:mm:ss'.'SSS'Z'"]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    hosts => "${ES_HOST}:${ES_PORT}"
    user => "${ES_USER}"
    password => "${ES_PWD}"
    manage_template => false
    index => "%{type}-%{+YYYY}"
    document_id => "%{document_id}"
  }
}